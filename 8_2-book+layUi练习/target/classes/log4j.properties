# 控制台输出配置
log4j.appender.Console=org.apache.log4j.ConsoleAppender
# 设置输出日志的格式,设置自定义格式
log4j.appender.Console.layout=org.apache.log4j.PatternLayout
# 设置日志的输出格式
log4j.appender.Console.layout.ConversionPattern=%d [%t] %-5p [%c] - %m%n


# 文件输出配置(按照时间分割日志)
log4j.appender.A = org.apache.log4j.DailyRollingFileAppender
# 指定日志的输出路径,最后log不是文件路径是下面DatePattern的前缀
log4j.appender.A.File = D:\\pic\\log
# 设置日志的生成方式(每分钟生成一个)
log4j.appender.A.DatePattern = '_'yyyy-MM-dd-HH-mm'.log'
# 是否进行日志内容的追加,默认为true,为追加
log4j.appender.A.Append = true
# 设置输出日志的级别,设置成DEBUG那么就会将DEBUG以及以上的级别全部输出
log4j.appender.A.Threshold = DEBUG
# 使用自定义日志格式化器
log4j.appender.A.layout = org.apache.log4j.PatternLayout
# 指定日志的输出格式
log4j.appender.A.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n
# 指定日志的文件编码
log4j.appender.A.encoding=UTF-8

# 文件输出配置(按照文件大小分割日志)
log4j.appender.B = org.apache.log4j.RollingFileAppender
# 指定日志的输出路径,最后log不是文件路径是下面DatePattern的前缀
log4j.appender.B.File = D:\\pic\\file_log.log
# 是否进行日志内容的追加,默认为true,为追加
log4j.appender.B.Append = true
# 设置输出日志的级别,设置成DEBUG那么就会将DEBUG以及以上的级别全部输出
log4j.appender.B.Threshold = DEBUG
# 使用自定义日志格式化器
log4j.appender.B.layout = org.apache.log4j.PatternLayout
# 指定日志的输出格式
log4j.appender.B.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n
# 指定日志的文件编码
log4j.appender.B.encoding=UTF-8
# 设置日志的大小
log4j.appender.R.MaxFileSize=20MB
# 约束生成文件的个数(防止硬盘爆掉)
log4j.appender.R.MaxBackupIndex=10

# 指定日志的输出级别与输出端,第一个参数是日志级别,其余的是设置那个日志appender；Console和A为自定义
log4j.rootLogger=DEBUG,Console,A,B